---
# Elasticsearch Ansible Tasks
#
# Check if data dir exists
#
- name: Does data dir exist?
  stat: path={{ elasticsearch_data_dir }}
  register: p

# Configure directories
- name: Configuring directories
  file: path={{ elasticsearch_log_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_log_dir is defined
- file: path={{ elasticsearch_data_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_data_dir is defined and p.stat.pw_name != {{ elasticsearch_user }}
- file: path={{ elasticsearch_work_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_work_dir is defined
- file: path={{ elasticsearch_conf_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_conf_dir is defined
- file: path={{ elasticsearch_plugin_dir }} state=absent
  when: elasticsearch_plugin_dir is defined and install_es_plugins == "yes"
- file: path={{ elasticsearch_plugin_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_plugin_dir is defined
- file: path={{ elasticsearch_backup_dir }} state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes
  when: elasticsearch_backup_dir is defined


# Configure Elasticsearch Node
- name: Configuring Elasticsearch Node
  template: src=elasticsearch_csc.yml.j2 dest={{ elasticsearch_conf_dir }}/elasticsearch.yml owner={{ elasticsearch_user }} group={{ elasticsearch_group }} mode=0644
  when: elasticsearch_conf_dir is defined
  tags: elasticsearch
  register: configured_elasticsearch
- template: src=elasticsearch_csc.default.j2 dest=/etc/sysconfig/elasticsearch owner={{ elasticsearch_user }} group={{ elasticsearch_group }} mode=0644

# Install Other Generic Plugins
- include: plugins.yml
  when: (elasticsearch_plugins is defined)

# Install Marvel Plugin
#- include: marvel.yml
#  when: (elasticsearch_plugin_marvel_version is defined)

# Restart Elasticsearch
- name: Restarting Elasticsearch
  service: name=elasticsearch state=restarted
  tags: elasticsearch
  when: configured_elasticsearch.changed

# Register Elasticsearch service to start on boot
- name: Ensure Elasticsearch is started on boot
  service: name=elasticsearch enabled={{ elasticsearch_service_startonboot }}
