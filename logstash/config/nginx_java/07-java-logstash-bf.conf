input {
  file {
    path => "/home/cloud-user/host1_logs/*.log"
    start_position => beginning
    sincedb_path => "/dev/null"
    type => "java"
    tags => "host1"

	codec => multiline {
            pattern => "(^\d+\serror)|(^.+Exception: .+)|(^\s+at .+)|(^\?s+... \d+ more)|(^\s*Caused by:.+)"
            what => "previous"
        }

  }
  file {
    path => "/home/cloud-user/host2_logs/*.log"
    start_position => beginning
    sincedb_path => "/dev/null"
    type => "java"
    tags => "host2"

	codec => multiline {
            pattern => "(^\d+\serror)|(^.+Exception: .+)|(^\s+at .+)|(^\?s+... \d+ more)|(^\s*Caused by:.+)"
            what => "previous"
        }
  }
}

filter {

  if [type] == "java" {
    grok {
      match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} %{GREEDYDATA:message}" ]
      overwrite => [ "message" ]
      tag_on_failure => [ "_parse_java_failure10" ]
    }
  
    date {  
      # 2015-04-30 00:01:50,997
      match => [ "timestamp", "YYYY-MM-DD HH:mm:ss,SSS" ]
      remove_field => [ "timestamp" ]
      add_tag => [ "timestamp_matched" ]
    }
  
  }

}

output {

    elasticsearch {
      protocol => "http"
      host => "localhost"
      index => "demo-%{+YYYY.MM}"
      port => "9199"
    }

    stdout {
      codec => dots {}
    }

}
